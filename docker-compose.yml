# Reusable logging config
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "14"
    compress: "true"


# Networks
networks:
  ll:
    external: false
  lrsc:
    external: false
  pdc:
    external: false


# Volumes
volumes:
  app-storage:


services:
## ----------------- Traefik -----------------
  traefik:
    image: traefik:v3.3.2
    restart: always
    networks:
      - ll
      - lrsc
      - pdc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volumes/traefik_data:/letsencrypt
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    profiles: ["all"]


## ----------------- LRS CONNECTOR -----------------
  lrsc:
    build:
      context: ./lrsc
      dockerfile: Dockerfile
    container_name: lrsc
    command: "uvicorn src.main:app --host 0.0.0.0 --port ${LRSC_PORT}"
    restart: unless-stopped
    networks:
      - lrsc
    tty: true
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    depends_on:
      - traefik
    profiles: ["lrsc", "all"]


## ----------------- LEARNINGLOCKER -----------------
  ## ----------------- Databases -----------------
  mongo:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongo
    networks:
      - ll
    volumes:
      - ./volumes/mongo_data:/data/db
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    profiles: ["ll", "all"]


  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - ll
    volumes:
      - ./volumes/redis_data:/data
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    profiles: ["ll", "all"]


  ## ----------------- xAPI -----------------
  xapi:
    image: learninglocker/xapi-service:6.0.0
    restart: unless-stopped
    environment:
      - MONGO_URL=${LL_MONGO_URL}
      - MONGO_DB=${LL_MONGO_DB}
      - REDIS_URL=${LL_REDIS_URL}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      traefik:
        condition: service_started
    networks:
      - ll
    volumes:
      - ./volumes/xapi_storage:/usr/src/app/storage
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    profiles: ["ll", "all"]


  ## ----------------- LearningLocker App -- using ll.Dockerfile-----------------
  api:
    build:
      dockerfile: ./ll/ll.Dockerfile
    image: ll-app:latest
    command: "node api/dist/server"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      traefik:
        condition: service_started
    networks:
      - ll
    env_file:
      - ./ll/.env
    volumes:
      - app-storage:/opt/learninglocker/storage
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    profiles: ["ll", "all"]


  ui:
    image: ll-app:latest
    command: "node ui/dist/server"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
      traefik:
        condition: service_started
    networks:
      - ll
    env_file:
      - ./ll/.env
    volumes:
      - ./volumes/ui_logs:/opt/learninglocker/logs
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    profiles: ["ll", "all"]


  worker:
    image: ll-app:latest
    command: "node worker/dist/server"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
      traefik:
        condition: service_started
    networks:
      - ll
    env_file:
      - ./ll/.env
    volumes:
      - app-storage:/opt/learninglocker/storage
    labels:
      - "traefik.enable=false"  # Overridden by dev/prod
    logging: *default-logging
    profiles: ["ll", "all"]


## ----------------- PDC -----------------
  pdc:
    container_name: pdc
    build:
      context: ./pdc
      dockerfile: pdc.Dockerfile
    restart: unless-stopped
    depends_on:
      traefik:
        condition: service_started
      mongodb:
        condition: service_healthy
    tty: true
    logging: *default-logging
    env_file:
      - ./pdc/.env.production
    command: "npm run start"
    networks:
      - pdc
    profiles: ["pdc", "all"]


  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    restart: unless-stopped
    volumes:
      - ./volumes/data:/data/db
    logging: *default-logging
    networks:
      - pdc
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD-SHELL","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    profiles: ["pdc", "all"]
